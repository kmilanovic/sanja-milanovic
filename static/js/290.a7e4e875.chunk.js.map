{"version":3,"file":"static/js/290.a7e4e875.chunk.js","mappings":"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","sources":["components/ContentBlock/styles.ts","components/ContentBlock/index.tsx"],"sourcesContent":["import { Row } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ContentSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 2rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const StyledRow = styled(Row)`\r\n  flex-direction: ${({ direction }: { direction: string }) =>\r\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 15px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  font-family: \"Motiva Sans Light\", sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 13px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;","import { Row, Col } from \"antd\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nimport { ContentBlockProps } from \"./types\";\r\nimport { Button } from \"../../common/Button\";\r\nimport { SvgIcon } from \"../../common/SvgIcon\";\r\nimport {\r\n  ContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n  StyledRow,\r\n  ButtonWrapper\r\n} from \"./styles\";\r\n\r\nconst ContentBlock = ({\r\n  icon,\r\n  iconSize,\r\n  title,\r\n  content,\r\n  section,\r\n  button,\r\n  t,\r\n  id,\r\n  direction,\r\n  children, \r\n}: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ContentSection>\r\n      <Fade duration={2500} triggerOnce>\r\n        <StyledRow justify=\"space-between\" align=\"middle\" id={id} direction={direction}>\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            {children ? (\r\n              children\r\n            ) : icon ? (\r\n              <SvgIcon\r\n                src={icon}\r\n                width={iconSize?.width || \"100%\"}\r\n                height={iconSize?.height || \"100%\"}\r\n              />\r\n            ) : null}\r\n          </Col>\r\n\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              {typeof title === \"string\" ? <h6>{t(title)}</h6> : title}\r\n              <Content>{t(content)}</Content>\r\n\r\n              {button && button.length > 0 && (\r\n                <ButtonWrapper>\r\n                  {button.map((item, id) => {\r\n                    if (!item.scrollTo) return null;\r\n                    return (\r\n                      <Button key={id} color={item.color} onClick={() => scrollTo(item.scrollTo!)}>\r\n                        {t(item.title)}\r\n                      </Button>\r\n                    );\r\n                  })}\r\n                </ButtonWrapper>\r\n              )}\r\n\r\n              {section && section.length > 0 && (\r\n                <ServiceWrapper>\r\n                  <Row justify=\"space-between\">\r\n                    {section.map((item, index) => (\r\n                      <Col key={index} span={11}>\r\n                         <SvgIcon \r\n            src={item.icon}  // ðŸ‘ˆ Ensure this receives the full path from JSON\r\n            width=\"60px\" \r\n            height=\"60px\" \r\n          />\r\n                        <MinTitle>{t(item.title)}</MinTitle>\r\n                        <MinPara>{t(item.content)}</MinPara>\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                </ServiceWrapper>\r\n              )}\r\n            </ContentWrapper>\r\n          </Col>\r\n        </StyledRow>\r\n      </Fade>\r\n    </ContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(ContentBlock);\r\n"],"names":["ContentSection","styled","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","StyledRow","Row","_templateObject3","_ref","direction","ContentWrapper","_templateObject4","ServiceWrapper","_templateObject5","MinTitle","_templateObject6","MinPara","_templateObject7","ButtonWrapper","_templateObject8","withTranslation","icon","iconSize","title","content","section","button","t","id","children","_jsx","Fade","duration","triggerOnce","_jsxs","justify","align","Col","lg","md","sm","xs","SvgIcon","src","width","height","length","map","item","scrollTo","Button","color","onClick","document","getElementById","scrollIntoView","behavior","index","span"],"sourceRoot":""}