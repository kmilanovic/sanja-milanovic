{"version":3,"file":"static/js/290.216c69f3.chunk.js","mappings":"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","sources":["components/ContentBlock/styles.ts","components/ContentBlock/index.tsx"],"sourcesContent":["import { Row } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ContentSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 2rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const StyledRow = styled(Row)`\r\n  flex-direction: ${({ direction }: { direction: string }) =>\r\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 15px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  font-family: \"Motiva Sans Light\", sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 13px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { ReactNode } from \"react\"; // Import ReactNode type for flexibility\r\n\r\nimport { ContentBlockProps } from \"./types\";\r\nimport { Button } from \"../../common/Button\";\r\nimport { SvgIcon } from \"../../common/SvgIcon\";\r\nimport {\r\n  ContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n  StyledRow,\r\n  ButtonWrapper,\r\n} from \"./styles\";\r\n\r\nconst ContentBlock = ({\r\n  icon,\r\n  title,\r\n  content,\r\n  section,\r\n  button,\r\n  t,\r\n  id,\r\n  direction,\r\n}: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n\r\n  console.log(\"Section data:\", section);\r\n\r\n  return (\r\n    <ContentSection>\r\n      <Fade duration={2500} triggerOnce>\r\n        <StyledRow\r\n          justify=\"space-between\"\r\n          align=\"middle\"\r\n          id={id}\r\n          direction={direction}\r\n        >\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n          </Col>\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              {typeof title === \"string\" ? (\r\n                <h6>{t(title)}</h6>\r\n              ) : (\r\n                title\r\n              )}\r\n              <Content>{t(content)}</Content>\r\n\r\n              {/* Handle both buttons and sections regardless of direction */}\r\n              {button && button.length > 0 && (\r\n                <ButtonWrapper>\r\n                  {button.map(\r\n                    (\r\n                      item: {\r\n                        color?: string;\r\n                        title: string;\r\n                        scrollTo?: string;\r\n                      },\r\n                      id: number\r\n                    ) => {\r\n                      if (!item.scrollTo) {\r\n                        return null;\r\n                      }\r\n                      return (\r\n                        <Button\r\n                          key={id}\r\n                          color={item.color}\r\n                          onClick={() => scrollTo(item.scrollTo!)}\r\n                        >\r\n                          {t(item.title)}\r\n                        </Button>\r\n                      );\r\n                    }\r\n                  )}\r\n                </ButtonWrapper>\r\n              )}\r\n\r\n              {/* Render section if available */}\r\n              {section && section.length > 0 && (\r\n                <ServiceWrapper>\r\n                  <Row justify=\"space-between\">\r\n                    {section.map((item, index) => (\r\n                      <Col key={index} span={11}>\r\n                        <SvgIcon src={item.icon} width=\"60px\" height=\"60px\" />\r\n                        <MinTitle>{t(item.title)}</MinTitle>\r\n                        <MinPara>{t(item.content)}</MinPara>\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                </ServiceWrapper>\r\n              )}\r\n            </ContentWrapper>\r\n          </Col>\r\n        </StyledRow>\r\n      </Fade>\r\n    </ContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(ContentBlock);"],"names":["ContentSection","styled","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","StyledRow","Row","_templateObject3","_ref","direction","ContentWrapper","_templateObject4","ServiceWrapper","_templateObject5","MinTitle","_templateObject6","MinPara","_templateObject7","ButtonWrapper","_templateObject8","withTranslation","icon","title","content","section","button","t","id","console","log","_jsx","children","Fade","duration","triggerOnce","_jsxs","justify","align","Col","lg","md","sm","xs","SvgIcon","src","width","height","length","map","item","scrollTo","Button","color","onClick","document","getElementById","scrollIntoView","behavior","index","span"],"sourceRoot":""}